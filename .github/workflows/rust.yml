name: Rust Windows CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    # Install Rust for Windows
    - name: Install Rust
      run: rustup update stable

    # Cache dependencies to speed up future builds
    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    # Build the project in release mode
    - name: Build
      run: cargo build --release --verbose

    # Upload the compiled .exe file as an artifact
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: HWID_Spoofer_Executable
        path: target/release/untitled2.exe  # Replace `untitled2.exe` with your actual binary name
    
    # Create a GitHub Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0  # Adjust the version number as needed
        release_name: 'HWID Spoofer v1.0.0'
        draft: false
        prerelease: false
    
    # Upload the .exe to the release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/release/untitled2.exe  # Replace with the path to your compiled executable
        asset_name: HWID_Spoofer_v1.0.0.exe  # Name of the file in the release
        asset_content_type: application/octet-stream
